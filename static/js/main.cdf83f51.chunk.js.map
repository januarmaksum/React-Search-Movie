{"version":3,"sources":["components/MovieListItem.js","components/MovieDetailModal.js","App.js","index.js"],"names":["MovieListItem","props","movie","Title","Year","Poster","imdbID","className","onClick","onMovieSelect","open","src","alt","MovieDetailModal","selectedMovie","useState","movieInfo","setMovieInfo","useEffect","Axios","get","API_KEY","then","response","data","ReactDom","createPortal","onClose","Type","imdbRating","Language","Runtime","Genre","Director","Actors","Plot","document","getElementById","App","searchQuery","updateSearchQuery","movieList","updateMovieList","timeoutId","updateTimeoutId","isOpen","setIsOpen","fetchData","value","a","Search","placeholder","onChange","event","clearTimeout","target","timeout","setTimeout","length","map","index","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.cdf83f51.chunk.js","sourcesContent":["import React from \"react\"\n\nconst MovieListItem = props => {\n    const { Title, Year, Poster, imdbID } = props.movie\n    return (\n        <div className=\"movie\" onClick={() => { props.onMovieSelect(imdbID); props.open(true) }}>\n            <div className=\"movie-item\">\n                <img src={Poster} alt={Title} />\n            </div>\n            <h3 className=\"movie-item-title\">{Title}</h3>\n            <div className=\"movie-item-sub-title\">{Year}</div>\n        </div>\n    )\n}\n\nexport default MovieListItem","import React, { useEffect, useState } from \"react\"\nimport ReactDom from 'react-dom'\nimport Axios from \"axios\"\nimport { API_KEY } from \"../App\"\n\nconst MovieDetailModal = props => {\n    const { open, selectedMovie } = props\n    const [movieInfo, setMovieInfo] = useState()\n\n    // fetch detail movie if user clicked movie list item\n    useEffect(() => {\n        Axios.get(\n            `https://www.omdbapi.com/?i=${selectedMovie}&apikey=${API_KEY}`,\n        ).then((response) => setMovieInfo(response.data))\n    }, [selectedMovie])\n\n    // if user close modal this modal will be removed from the DOM\n    if (!open) return null\n\n    return ReactDom.createPortal(\n        <>\n            <div className=\"modal-overlay\" />\n            <div className=\"modal-container\">\n                <button className=\"close-modal\" onClick={() => { props.onClose(); props.onMovieSelect() }}>\n                    <img src='https://raw.githubusercontent.com/januarmaksum/januarmaksum.github.io/master/close_icon.svg' alt=\"icon close modal\" />\n                </button>\n                {movieInfo ? (\n                    <div className=\"modal-body\">\n                        <img src={movieInfo?.Poster} alt={movieInfo?.Title} />\n                        <div className=\"modal-body-content\">\n                            <div className=\"movie-info movie-title\">{movieInfo?.Type} <span>{movieInfo?.Title}</span></div>\n                            <div className=\"movie-info\">IMDB Rating: <span>{movieInfo?.imdbRating}</span></div>\n                            <div className=\"movie-info\">Year: <span>{movieInfo?.Year}</span></div>\n                            <div className=\"movie-info\">Language: <span>{movieInfo?.Language}</span></div>\n                            <div className=\"movie-info\">Runtime: <span>{movieInfo?.Runtime}</span></div>\n                            <div className=\"movie-info\">Genre: <span>{movieInfo?.Genre}</span></div>\n                            <div className=\"movie-info\">Director: <span>{movieInfo?.Director}</span></div>\n                            <div className=\"movie-info\">Actors: <span>{movieInfo?.Actors}</span></div>\n                            <div className=\"movie-info\">Synopsis: <span>{movieInfo?.Plot}</span></div>\n                        </div>\n                    </div>\n                ) : (\n                    \"Loading...\"\n                )}\n            </div>\n\n        </>,\n        // this element for container modal, so there is no conflict with elements other than modal popup\n        document.getElementById('portal')\n    )\n}\n\nexport default MovieDetailModal","import React, { useState } from \"react\"\nimport Axios from \"axios\"\nimport MovieListItem from \"./components/MovieListItem\"\nimport MovieDetailModal from \"./components/MovieDetailModal\"\nexport const API_KEY = \"faf7e5bb\"\n\nexport default function App() {\n    const [searchQuery, updateSearchQuery] = useState(\"\")\n    const [movieList, updateMovieList] = useState([])\n    const [timeoutId, updateTimeoutId] = useState()\n    const [selectedMovie, onMovieSelect] = useState()\n    const [isOpen, setIsOpen] = useState(false)\n\n    // fetch data from omdbapi if user typing in search box\n    const fetchData = async (value) => {\n        const response = await Axios.get(\n            `https://www.omdbapi.com/?s=${value}&apikey=${API_KEY}`,\n        )\n        updateMovieList(response.data.Search)\n    }\n    const onTextChange = event => {\n        onMovieSelect(\"\")\n        clearTimeout(timeoutId)\n        updateSearchQuery(event.target.value)\n        const timeout = setTimeout(() => fetchData(event.target.value), 500)\n        updateTimeoutId(timeout)\n    }\n\n    return (\n        <>\n            {/* Header: logo and search box */}\n            <header className=\"nav-bar\">\n                <div className=\"nav-bar-container\">\n                    <div className=\"nav-logo\">Movie App</div>\n                    <div className=\"nav-search\">\n                        <img src='https://raw.githubusercontent.com/januarmaksum/januarmaksum.github.io/master/search_icon.svg' alt=\"icon search\" />\n                        <input\n                            className=\"nav-search-input\"\n                            placeholder=\"Quick search\"\n                            value={searchQuery}\n                            onChange={onTextChange}\n                        />\n                    </div>\n                </div>\n            </header>\n\n            {/* Movie list item */}\n            <main className=\"main-content\">\n                {movieList?.length ? (\n                    movieList.map((movie, index) => (\n                        <MovieListItem\n                            key={index}\n                            movie={movie}\n                            onMovieSelect={onMovieSelect}\n                            open={setIsOpen}\n                        />\n                    ))\n                ) : (\n                    <img className=\"movie-logo\" src='https://raw.githubusercontent.com/januarmaksum/januarmaksum.github.io/master/movie_icon.png' alt=\"movie logo\" />\n                )}\n\n            </main>\n\n            {/* Modal detail movie */}\n            {selectedMovie && <MovieDetailModal selectedMovie={selectedMovie} onMovieSelect={onMovieSelect} open={isOpen} onClose={() => setIsOpen(false)} />}\n        </>\n    )\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport \"./styles/App.css\"\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)"],"sourceRoot":""}